//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Newtonsoft.Json;

namespace BungieNet.Destiny.Definitions
{
	/// <summary>
	/// These are the definitions for Vendors.
	/// In Destiny, a Vendor can be a lot of things - some things that you wouldn't expect, and some things that you don't even see directly in the game. Vendors are the Dolly Levi of the Destiny universe.
	/// - Traditional Vendors as you see in game: people who you come up to and who give you quests, rewards, or who you can buy things from.
	/// - Kiosks/Collections, which are really just Vendors that don't charge currency (or charge some pittance of a currency) and whose gating for purchases revolves more around your character's state.
	/// - Previews for rewards or the contents of sacks. These are implemented as Vendors, where you can't actually purchase from them but the items that they have for sale and the categories of sale items reflect the rewards or contents of the sack. This is so that the game could reuse the existing Vendor display UI for rewards and save a bunch of wheel reinvention.
	/// - Item Transfer capabilities, like the Vault and Postmaster. Vendors can have "acceptedItem" buckets that determine the source and destination buckets for transfers. When you interact with such a vendor, these buckets are what gets shown in the UI instead of any items that the Vendor would have for sale. Yep, the Vault is a vendor.
	/// It is pretty much guaranteed that they'll be used for even more features in the future. They have come to be seen more as generic categorized containers for items than "vendors" in a traditional sense, for better or worse.
	/// Where possible and time allows, we'll attempt to split those out into their own more digestible derived "Definitions": but often time does not allow that, as you can see from the above ways that vendors are used which we never split off from Vendor Definitions externally.
	/// Since Vendors are so many things to so many parts of the game, the definition is understandably complex. You will want to combine this data with live Vendor information from the API when it is available.
	/// </summary>
	public partial class DestinyVendorDefinition : Destiny.Definitions.DestinyDefinition
	{
		[JsonProperty("displayProperties")]
		public Destiny.Definitions.DestinyVendorDisplayPropertiesDefinition DisplayProperties { get; set; }

		[JsonProperty("buyString")]
		public string BuyString { get; set; }

		[JsonProperty("sellString")]
		public string SellString { get; set; }

		[JsonProperty("displayItemHash")]
		public uint DisplayItemHash { get; set; }

		[JsonProperty("inhibitBuying")]
		public bool InhibitBuying { get; set; }

		[JsonProperty("inhibitSelling")]
		public bool InhibitSelling { get; set; }

		[JsonProperty("factionHash")]
		public uint FactionHash { get; set; }

		[JsonProperty("resetIntervalMinutes")]
		public int ResetIntervalMinutes { get; set; }

		[JsonProperty("resetOffsetMinutes")]
		public int ResetOffsetMinutes { get; set; }

		[JsonProperty("failureStrings")]
		public string[] FailureStrings { get; set; }

		[JsonProperty("unlockRanges")]
		public Dates.DateRange[] UnlockRanges { get; set; }

		[JsonProperty("vendorIdentifier")]
		public string VendorIdentifier { get; set; }

		[JsonProperty("vendorPortrait")]
		public string VendorPortrait { get; set; }

		[JsonProperty("vendorBanner")]
		public string VendorBanner { get; set; }

		[JsonProperty("enabled")]
		public bool Enabled { get; set; }

		[JsonProperty("visible")]
		public bool Visible { get; set; }

		[JsonProperty("vendorSubcategoryIdentifier")]
		public string VendorSubcategoryIdentifier { get; set; }

		[JsonProperty("consolidateCategories")]
		public bool ConsolidateCategories { get; set; }

		[JsonProperty("actions")]
		public Destiny.Definitions.DestinyVendorActionDefinition[] Actions { get; set; }

		[JsonProperty("categories")]
		public Destiny.Definitions.DestinyVendorCategoryEntryDefinition[] Categories { get; set; }

		[JsonProperty("originalCategories")]
		public Destiny.Definitions.DestinyVendorCategoryEntryDefinition[] OriginalCategories { get; set; }

		[JsonProperty("displayCategories")]
		public Destiny.Definitions.DestinyDisplayCategoryDefinition[] DisplayCategories { get; set; }

		[JsonProperty("interactions")]
		public Destiny.Definitions.DestinyVendorInteractionDefinition[] Interactions { get; set; }

		[JsonProperty("inventoryFlyouts")]
		public Destiny.Definitions.DestinyVendorInventoryFlyoutDefinition[] InventoryFlyouts { get; set; }

		[JsonProperty("itemList")]
		public Destiny.Definitions.DestinyVendorItemDefinition[] ItemList { get; set; }

		[JsonProperty("services")]
		public Destiny.Definitions.DestinyVendorServiceDefinition[] Services { get; set; }

		[JsonProperty("acceptedItems")]
		public Destiny.Definitions.DestinyVendorAcceptedItemDefinition[] AcceptedItems { get; set; }

		[JsonProperty("returnWithVendorRequest")]
		public bool ReturnWithVendorRequest { get; set; }

		[JsonProperty("locations")]
		public Destiny.Definitions.Vendors.DestinyVendorLocationDefinition[] Locations { get; set; }

		[JsonProperty("groups")]
		public Destiny.Definitions.DestinyVendorGroupReference[] Groups { get; set; }

		[JsonProperty("ignoreSaleItemHashes")]
		public uint[] IgnoreSaleItemHashes { get; set; }
	}
}
