//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Newtonsoft.Json;

namespace BungieNet.Destiny.Definitions
{
	/// <summary>
	/// Perks are modifiers to a character or item that can be applied situationally.
	/// - Perks determine a weapons' damage type.
	/// - Perks put the Mods in Modifiers (they are literally the entity that bestows the Sandbox benefit for whatever fluff text about the modifier in the Socket, Plug or Talent Node)
	/// - Perks are applied for unique alterations of state in Objectives
	/// Anyways, I'm sure you can see why perks are so interesting.
	/// What Perks often don't have is human readable information, so we attempt to reverse engineer that by pulling that data from places that uniquely refer to these perks: namely, Talent Nodes and Plugs. That only gives us a subset of perks that are human readable, but those perks are the ones people generally care about anyways. The others are left as a mystery, their true purpose mostly unknown and undocumented.
	/// </summary>
	public partial class DestinySandboxPerkDefinition : Destiny.Definitions.DestinyDefinition
	{
		[JsonProperty("displayProperties")]
		public Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition DisplayProperties { get; set; }

		[JsonProperty("perkIdentifier")]
		public string PerkIdentifier { get; set; }

		[JsonProperty("isDisplayable")]
		public bool IsDisplayable { get; set; }

		[JsonProperty("damageType")]
		public Destiny.DamageType DamageType { get; set; }

		[JsonProperty("damageTypeHash")]
		public uint? DamageTypeHash { get; set; }

		[JsonProperty("perkGroups")]
		public Destiny.Definitions.DestinyTalentNodeStepGroups PerkGroups { get; set; }
	}
}
