//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Newtonsoft.Json;

namespace BungieNet.Destiny.Entities.Items
{
	/// <summary>
	/// If an item is "instanced", this will contain information about the item's instance that doesn't fit easily into other components. One might say this is the "essential" instance data for the item.
	/// Items are instanced if they require information or state that can vary. For instance, weapons are Instanced: they are given a unique identifier, uniquely generated stats, and can have their properties altered. Non-instanced items have none of these things: for instance, Glimmer has no unique properties aside from how much of it you own.
	/// You can tell from an item's definition whether it will be instanced or not by looking at the DestinyInventoryItemDefinition's definition.inventory.isInstanceItem property.
	/// </summary>
	public partial class DestinyItemInstanceComponent
	{
		[JsonProperty("damageType")]
		public Destiny.DamageType DamageType { get; set; }

		[JsonProperty("damageTypeHash")]
		public uint? DamageTypeHash { get; set; }

		[JsonProperty("primaryStat")]
		public Destiny.DestinyStat PrimaryStat { get; set; }

		[JsonProperty("itemLevel")]
		public int ItemLevel { get; set; }

		[JsonProperty("quality")]
		public int Quality { get; set; }

		[JsonProperty("isEquipped")]
		public bool IsEquipped { get; set; }

		[JsonProperty("canEquip")]
		public bool CanEquip { get; set; }

		[JsonProperty("equipRequiredLevel")]
		public int EquipRequiredLevel { get; set; }

		[JsonProperty("unlockHashesRequiredToEquip")]
		public uint[] UnlockHashesRequiredToEquip { get; set; }

		[JsonProperty("cannotEquipReason")]
		public Destiny.EquipFailureReason CannotEquipReason { get; set; }
	}
}
