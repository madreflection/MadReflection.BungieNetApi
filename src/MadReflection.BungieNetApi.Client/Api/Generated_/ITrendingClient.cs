//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace BungieNet.Api
{
	public interface ITrendingClient
	{
		Trending.TrendingCategories GetTrendingCategories();
		Task<Trending.TrendingCategories> GetTrendingCategoriesAsync();

		SearchResultOfTrendingEntry GetTrendingCategory(string categoryId, int pageNumber);
		Task<SearchResultOfTrendingEntry> GetTrendingCategoryAsync(string categoryId, int pageNumber);

		Trending.TrendingDetail GetTrendingEntryDetail(Trending.TrendingEntryType trendingEntryType, string identifier);
		Task<Trending.TrendingDetail> GetTrendingEntryDetailAsync(Trending.TrendingEntryType trendingEntryType, string identifier);
	}

	partial interface IBungieClient
	{
		ITrendingClient Trending { get; }
	}

	partial class BungieClient : ITrendingClient
	{
		public ITrendingClient Trending => this;


		Trending.TrendingCategories ITrendingClient.GetTrendingCategories() => Trending.GetTrendingCategoriesAsync().GetAwaiter().GetResult();
		Task<Trending.TrendingCategories> ITrendingClient.GetTrendingCategoriesAsync()
		{
			string[] pathSegments = new string[] { "Trending", "Categories" };
			Uri uri = GetEndpointUri(BungieEndpointBase.Default, pathSegments, true, null);
			return GetEntityAsync<Trending.TrendingCategories>(uri);
		}

		SearchResultOfTrendingEntry ITrendingClient.GetTrendingCategory(string categoryId, int pageNumber) => Trending.GetTrendingCategoryAsync(categoryId, pageNumber).GetAwaiter().GetResult();
		Task<SearchResultOfTrendingEntry> ITrendingClient.GetTrendingCategoryAsync(string categoryId, int pageNumber)
		{
			if (categoryId is null)
				throw new ArgumentNullException(nameof(categoryId));
			string[] pathSegments = new string[] { "Trending", "Categories", categoryId, pageNumber.ToString() };
			Uri uri = GetEndpointUri(BungieEndpointBase.Default, pathSegments, true, null);
			return GetEntityAsync<SearchResultOfTrendingEntry>(uri);
		}

		Trending.TrendingDetail ITrendingClient.GetTrendingEntryDetail(Trending.TrendingEntryType trendingEntryType, string identifier) => Trending.GetTrendingEntryDetailAsync(trendingEntryType, identifier).GetAwaiter().GetResult();
		Task<Trending.TrendingDetail> ITrendingClient.GetTrendingEntryDetailAsync(Trending.TrendingEntryType trendingEntryType, string identifier)
		{
			if (identifier is null)
				throw new ArgumentNullException(nameof(identifier));
			string[] pathSegments = new string[] { "Trending", "Details", ((int)trendingEntryType).ToString(), identifier };
			Uri uri = GetEndpointUri(BungieEndpointBase.Default, pathSegments, true, null);
			return GetEntityAsync<Trending.TrendingDetail>(uri);
		}
	}
}
